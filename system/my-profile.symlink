if hash gpg-agent 2>/dev/null; then
	# Invoke GnuPG-Agent the first time we login.
	# Does '~/.gpg-agent-info' exist and points to gpg-agent process accepting
	# signals?
	
	if test -f $HOME/.gpg-agent-info && \
		kill -0 `cut -d: -f 2 $HOME/.gpg-agent-info` 2>/dev/null; then
		GPG_AGENT_INFO=`cat $HOME/.gpg-agent-info | cut -c 16-`
	else
		# No, gpg-agent not available; start gpg-agent
		eval `gpg-agent --daemon --no-grab`
		# eval `gpg-agent --daemon --no-grab --write-env-file $HOME/.gpg-agent-info`
	fi
else
	echo >&2 "gnupg-agent not installed.";
fi


# User specific environment and startup programs
#
# check if $HOME/.local_bin/bin exists in $PATH, otherwise add it
if ! [[ :$PATH: == *:"$HOME/.local_bin/bin":* ]]; then
	PATH=$PATH:$HOME/.local_bin/bin
fi

# exports
#
export GPG_TTY=`tty`
export GPG_AGENT_INFO
export PATH
export BROWSER=/usr/bin/google-chrome-stable
export VAGRANT_HOME=/opt/VMs/vagrant.d/

# alias
#
alias git="git -c http.proxy=${http_proxy}"
alias ssh-xterm="TERM=xterm ssh"
alias vagrant="TERM=xterm vagrant"

######################################
# Deprecate any docker completion		 #
# Delete any docker completion later #
######################################
###check if docker is installed, then source command-completion
##if hash docker 2>/dev/null; then
##	case $(ps -p $$|tail -1|awk '{print $NF}') in
##		zsh )
##			. ~/.docker/_docker
##			;;
##		bash )
##			. ~/.docker/docker-completion.sh
##			;;
##		* )
##			;;
##	esac
##else
##	echo >&2 '"docker" not installed.';
##fi
##
###check if docker-compose is installed, then source command-completion
##if hash docker-compose 2>/dev/null; then
##	case $(ps -p $$|tail -1|awk '{print $NF}') in
##		zsh )
##			. ~/.docker/_docker-compose
##			;;
##		bash )
##			. ~/.docker/docker-compose-completion.sh
##			;;
##		* )
##			;;
##	esac
##else
##	echo >&2 '"docker-compose" not installed.';
##fi
##
###check if docker-machine is installed, then source command-completion
##if hash docker-machine 2>/dev/null; then
##	case $(ps -p $$|tail -1|awk '{print $NF}') in
##		zsh )
##			. ~/.docker/_docker-machine
##			;;
##		bash )
##			. ~/.docker/docker-machine-completion.sh
##			;;
##		* )
##			;;
##	esac
##else
##	echo >&2 '"docker-machine" not installed.';
##fi

#check if init-nvm.sh exists, then source command-completion
if test -f /usr/share/nvm/init-nvm.sh; then
	source /usr/share/nvm/init-nvm.sh
fi

# turn carriage returns into newlines
stty icrnl
