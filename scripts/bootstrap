#!/usr/bin/bash
#
# bootstrap installs things.
#

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd -P)

set -e

echo ''

info () {
	printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
	printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
	printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

success_all () {
	printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1 [ \033[00;32mOK\033[0m ]\n"
}

fail () {
	printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
	echo ''
	exit
}

setup_gitconfig () {
	if ! [ -f git/gitconfig.local.symlink ]
	then
		info 'configure "gitconfig.local"'

		git_credential='netrc'

		user ' - What'"'"'s your github author name?'
		read -e git_authorname
		user ' - What'"'"'s your github user name?'
		read -e git_username
		user ' - What'"'"'s your github author email?'
		read -e git_authoremail
		user ' - What'"'"'s your proxy? (If you don'"'"'t have one, hit Enter)'
		read -e git_proxy

		sed -e "s/AUTHORNAME/$git_authorname/g"								\
				-e "s/USERNAME/$git_username/g"										\
				-e "s/AUTHOREMAIL/$git_authoremail/g"							\
				-e "s/GIT_CREDENTIAL_HELPER/$git_credential/g"		\
				-e "s#GIT_PROXY#$git_proxy#g"											\
				git/gitconfig.local.symlink.example > git/gitconfig.local.symlink

		success 'gitconfig.local'
	fi

}

link_file () {
	local src=$1 dst=$2

	local overwrite= backup= skip=
	local action=

	if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
	then

		if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
		then

			local currentSrc="$(readlink $dst)"

			if [ "$currentSrc" == "$src" ]
			then

				skip=true;

			else

				user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
				[s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
				read -n 1 action

				case "$action" in
					o )
						info "chose: overwrite"
						overwrite=true;;
					O )
						info "chose: overwrite ALL"
						overwrite_all=true;;
					b )
						info "chose: backup"
						backup=true;;
					B )
						info "chose: backup ALL"
						backup_all=true;;
					s )
						info "chose: skip"
						skip=true;;
					S )
						info "chose: skip ALL"
						skip_all=true;;
					* )
						info "chose: nothing"
						;;
				esac

			fi
		fi

		overwrite=${overwrite:-$overwrite_all}
		backup=${backup:-$backup_all}
		skip=${skip:-$skip_all}

		if [ "$overwrite" == "true" ]
		then
			rm -rf "$dst"
			success "removed $dst"
		fi

		if [ "$backup" == "true" ]
		then
			mv "$dst" "${dst}.backup"
			success "moved $dst to ${dst}.backup"
		fi

		if [ "$skip" == "true" ]
		then
			success "skipped $src"
		fi
	fi

	if [ "$skip" != "true" ] # "false" or empty
	then
		ln -s "$1" "$2"
		success "linked $1 to $2"
	fi
}

install_dotfiles () {
	info 'installing dotfiles'
	
	local overwrite_all=false backup_all=false skip_all=false
	
	for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*')
	do
		dst="$HOME/.$(basename "${src%.*}")"
		info "linking $src to $dst"
		link_file "$src" "$dst"
	done
}


setup_gitconfig
install_dotfiles

echo ''
success_all 'Everythins is installed!'
